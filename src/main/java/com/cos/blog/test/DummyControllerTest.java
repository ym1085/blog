package com.cos.blog.test;import com.cos.blog.model.RoleType;import com.cos.blog.model.User;import com.cos.blog.repository.UserRepository;import java.util.List;import java.util.function.Supplier;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.data.domain.Sort;import org.springframework.data.web.PageableDefault;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RestController;import java.util.IllformedLocaleException;// html 파일이 아니라 데이터를 요청 하는 것.@RestControllerpublic class DummyControllerTest{   @Autowired // 의존성 주입이 된다.   private UserRepository userRepository;   //htpp://localhost/8000/blog/dummy/user/3   @GetMapping("dummy/user")   public List<User>list(){      return userRepository.findAll();   }   //한 페이지당 2건에 데이터를 리턴 받기   @GetMapping("dummy/user/page")   public List<User> pageList(@PageableDefault(size = 2, sort = "id"   , direction = Sort.Direction.DESC) Pageable pageble){     Page<User> users =  userRepository.findAll(pageble);     return users;   }   //{id} 주소를 파라미터를 전달 받을 수 있음.   //htpp://localhost/8000/blog/dummy/user/3   @GetMapping("/dummy/user/{id}")   public User detail(@PathVariable int id ){      //람다식//      User user = userRepository.findById(id).orElseThrow(()->{//         return new lllegalArgumentExcpetion("해당 사용자는 없습니다.");//      });      User user = userRepository.findById(id).orElseThrow(new Supplier<IllegalArgumentException>() {         @Override         public IllegalArgumentException get() {            return new IllegalArgumentException("해당 사용자가 없습니다.");         }      });      //요청 : 웹 브라우저      //user 객체 = 자바 오브젝트      // 변환 (웹 브라우저가 이해할 수 있는 데이터) -> Json (Gson 라이브러리)      // 스프링부트 = MessageConverter라는 애가 응답시에 자동 작동      // 만약에 자바 오브젝트를 리턴하게 되면 MessageConverter가 Jackson 라이브러리를 호출해서      // user 오브젝를 Json으로 변환해서 브라우저에게 호출      return user;   }   // http://localhost:8000/blog/dummy/join (요청)   // http의 body에 username, password, email 데이터를 가지고 (요청)   @PostMapping("/dummy/join")   public String join(User user) { // key=value (약속된 규칙)      System.out.println("id : "+user.getId());      System.out.println("username : "+user.getUsername());      System.out.println("password : "+user.getPassword());      System.out.println("email : "+user.getEmail());      System.out.println("role : "+user.getRole());      System.out.println("createDate : "+user.getCreateDate());      user.setRole(RoleType.USER);      userRepository.save(user);      return "회원가입이 완료되었습니다.";   }}